/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2016. MIT licensed.
 */
.clear:after,.clear:before{content:' ';display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:62.5%;background:linear-gradient(#1b2935,#23446a)}body{font:300 13px/1.6 Helvetica Neue,Helvetica,Arial;color:#444;transition:all .4s ease-in .3s}body,html{min-height:100vh;overflow:hidden}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.logo{margin-top:20px}.facebook-btn{position:absolute;top:20px;left:360px}.input-append{position:relative}button.icon{position:absolute;top:1px;left:222px;border-radius:15px;border:none;background-color:transparent}.search-container{position:absolute;top:25px;left:510px;width:258px;height:37px}.search-container .search-input{background-color:transparent;border:medium none;color:#999;float:left;font-size:.9em;height:auto;margin:8px 5px 0 12px;width:185px}.search-container .search-submit{margin:5px 0 0 10px;width:25px}.search-query{background-color:#fff;border-radius:14px;border:none;padding:4px;padding-left:10px;padding-right:82px;margin-right:5px}.donate-btn{position:absolute;top:20px;left:760px;width:150px;height:30px}.nav ul{list-style:none}.sidebar{width:265px;padding-right:15px;float:left;background-color:#fbfbfb}.menu-options li{list-style:none;text-align:left;margin-left:-27px;margin-bottom:8px;line-height:1.5}.first-list,.menu-options li{border-bottom:1px solid #000}ul .sub-menu li{border-bottom:none;margin-left:10px;font-size:11px}.get-involved,.success-stories{width:240px;height:125px;background-color:#e6e6e6;margin:0 auto}.get-involved img{margin-left:10px;margin-top:15px;float:left}.get-involved p{float:left;font-size:12px;width:115px;margin-left:5px}.success{color:#000}.success-stories img{margin-left:10px;margin-top:15px;float:left}.success-stories p{float:left;font-size:12px;width:115px;margin-left:5px}a.donate{background-color:#d4740d;padding:10px 99px;text-decoration:none;color:#fff;margin-left:5px}.sm-aside{float:right;width:250px}.social-media{background-color:#f5f4f4;width:238px;height:35px;margin-top:10px}article .two,article h2{border-bottom:.5px solid #000;font-size:18px;color:#173f6b;font-weight:100}article .article-content{font-size:10px;font-weight:200}.date{color:#d4740d;line-height:.1}.author,.date{font-size:10px;font-weight:100}.author{color:#e6e6e6}.content-container{background-color:#fbfbfb;padding-bottom:20px;margin-top:-45px}.main{width:675px;float:left;margin-top:-38px}.main .col-one{float:left;width:400px;margin-left:12px}.services{font-family:serif;display:inline;text-align:left;margin-left:12px}.large-img{margin:auto;display:block}.prevention{font-family:serif;color:#d4740d;font-size:18px}.footer{height:200px;background-color:#0c2745;color:#666}.footer div{float:left;width:25%;padding-left:15px}.footer div h4{background-color:#091f37;height:40px;line-height:40px;color:#fbfbfb;white-space:nowrap;width:200px;text-align:center;font-weight:400}.footer div.logos-footer{margin-top:40px}.footer div.logos-footer img{padding:5px}.copyright{color:#fff;font-size:12px;text-align:center}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;base64, */
