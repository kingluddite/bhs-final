/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2016. MIT licensed.
 */
.clear:after,.clear:before{content:' ';display:table}.clear{*zoom:1}.clear:after{clear:both}body{font:300 13px/1.6 Helvetica Neue,Helvetica,Arial;color:#444;transition:all .4s ease-in .3s}body,html{min-height:100vh}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}header{position:relative;background:linear-gradient(#1b2935,#23446a)}header .facebook-icon{position:absolute;top:8px;left:380px;padding:9px 10px 0 15px}header .donate{position:absolute;top:8px;right:0}header .bhs-logo{position:absolute;top:0;left:10px;z-index:2}.search-container{position:absolute;top:10px;left:535px;background:transparent no-repeat;width:258px;height:37px;border:1px solid red}.search-container .search-input{background-color:transparent;border:medium none;color:#fff;float:left;font-size:.9em;height:auto;margin:8px 5px 0 12px;width:185px}.top-header{background:linear-gradient(#1b2935,#23446a);width:100%;color:#fff}.top-nav{font-size:.9em;padding:20px 0 30px 125px}.top-nav li{float:left;list-style:none}.top-nav span{padding:0 10px;color:#fff}.top-nav a{color:#fff;text-decoration:none}nav.main-nav{background-color:#fbfbfb;border-top:20px solid #666;border-bottom:20px solid #666;height:80px;text-transform:uppercase;border-radius:0;font-size:16px}.nav.navbar-nav.top-nav-black{font-size:.9em;padding:4px 0 30px 125px}.nav.navbar-nav.top-nav-black li{float:left;list-style:none}.nav.navbar-nav.top-nav-black span{padding:0 10px;color:#000}.nav.navbar-nav.top-nav-black a{color:#000;text-decoration:none}.nav.navbar-nav{font-size:.9em;padding:0 0 30px 125px}.nav.navbar-nav li{float:left;list-style:none}.nav.navbar-nav span{padding:0 10px;color:#fff}.nav.navbar-nav a{color:#fff;text-decoration:none}.navbar-toggler{float:right}.footer div{display:inline;padding-left:15px;border-left:1px solid #fff;height:150px;overflow:hidden}.footer-nav.footer-first{border-left:none}aside{width:25%;height:auto;margin-left:0;float:left;border:1px solid red}aside img.since1973{padding:10px}.get-involved{display:none}.fbimg{width:100%;max-width:238px;max-height:auto}.testimonials{color:#fbfbfb;background-color:#173f6b;padding:5px;position:relative;height:30px}.test{position:absolute;top:0;left:-22px;z-index:1}.testimonials-text{position:relative;width:140px}.testimonials-text img{float:right}.orange{width:100%;margin:5px 0;display:block}body{background:linear-gradient(#1b2935,#23446a)}.content-container,body{width:100%}.content{width:80%;background-color:#fbfbfb;margin:auto;position:relative}.main{width:70%;max-width:680px;float:left}.col-one{float:left;width:320px;margin-left:12px;padding:10px}.services{font-family:serif;display:inline;text-align:left;margin-left:12px}.prevention{font-family:serif;color:#666;font-size:2em;padding:15px;width:100%;margin:0;text-align:center;border-bottom:1px solid #666}.strong{color:blue}.body-copy{display:inline-block}.footer{height:190px;background-color:#133055;color:#666;margin-top:50px}.footer div{float:left;width:20%;min-width:220px;margin:10px;color:#fbfbfb}.footer div h4{background-color:#091f37;line-height:40px;color:#fbfbfb;width:100%;height:40px;text-align:center}.footer div.logos-footer{border:1px solid red;width:25%}.footer div.logos-footer img{margin:5px;display:inline-block}.copyright{color:#fff;font-size:12px;text-align:center}.footer-nav{width:20%;height:auto}.footer-nav h4{font-size:18px;margin:auto}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media screen and (max-width:1200px){.search-container{display:none}.aside-box p{width:100%}}@media screen and (max-width:767px){.donate,.sidebar-background,img.facebook-icon{display:none}.footer-border{border-right:none}.cert-logos{text-align:center;padding:0}.get-involved{display:inline}.aside-box p{width:80%}.facebook-button{display:none}li{text-align:center}}@media screen and (max-width:992px){.navbar-nav>li{display:block}}@media screen and (max-width:992px){.navbar-header{float:none}.navbar-left,.navbar-right{float:none!important}.navbar-toggle{display:block}.navbar-collapse{border-top:1px solid transparent;box-shadow:inset 0 1px 0 hsla(0,0%,100%,.1)}.navbar-fixed-top{top:0;border-width:0 0 1px}.navbar-collapse.collapse{display:none!important}.navbar-nav{float:none!important;margin-top:7.5px}.navbar-nav>li{float:none}.navbar-nav>li>a{padding-top:10px;padding-bottom:10px}.collapse.in{display:block!important}}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;base64, */
